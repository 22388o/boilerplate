import "hashmap.scrypt";

contract HashMapTest2 {
    
    @state
    HashMap map;

    public function testPut(SigHashPreimage txPreimage, int key, int value) {
        require(Tx.checkPreimage(txPreimage));

        this.map.put(num2bin(key, 8), num2bin(value, 8));
        bytes outputScript = this.getStateScript();
        bytes output = Utils.buildOutput(outputScript, SigHash.value(txPreimage));
        require(hash256(output) == SigHash.hashOutputs(txPreimage));
    }

    public function testGet(SigHashPreimage txPreimage, int key) {
        require(Tx.checkPreimage(txPreimage));
        require(this.map.get(num2bin(key, 8)).has);
        bytes outputScript = this.getStateScript();
        bytes output = Utils.buildOutput(outputScript, SigHash.value(txPreimage));
        require(hash256(output) == SigHash.hashOutputs(txPreimage));
    }

}